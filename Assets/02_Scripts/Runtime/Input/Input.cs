//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.2
//     from Assets/02_Scripts/Runtime/Input/Input.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace SolarAscension
{
    public partial class @Input : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @Input()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""Input"",
    ""maps"": [
        {
            ""name"": ""Camera"",
            ""id"": ""7fb6be1c-ff88-4ff6-8447-5eaa4aff7290"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""a1ff777f-1eae-40da-8d99-bec48871dd46"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b1d130df-c1cd-46f3-a841-0a5fe7e9e400"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""bdf80880-ab55-432c-ad33-c6211dee4d81"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SetFocus"",
                    ""type"": ""Button"",
                    ""id"": ""7e3d7b5e-ebf4-4e96-8a1c-4777c2d71447"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ResetCamera"",
                    ""type"": ""Button"",
                    ""id"": ""7afcc434-8293-4317-a9ae-b41288819669"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ConfirmCurrentAction"",
                    ""type"": ""Button"",
                    ""id"": ""83277c9c-9e8d-4023-9264-b1c9e59e33e1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CancelCurrentAction"",
                    ""type"": ""Button"",
                    ""id"": ""047ebacd-b5e2-40a2-a09f-4f97dfb84c27"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseMove"",
                    ""type"": ""PassThrough"",
                    ""id"": ""69efe0d3-5b9e-4b2f-8ffa-7febc2d28db7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MiddleMouseButton"",
                    ""type"": ""Button"",
                    ""id"": ""0d3fd847-cc92-4dd8-8f8f-26bef9f210df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""b1ae8480-5a52-458c-870f-8b86d136174d"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": ""InvertAxes"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""94b826a3-5673-4766-bade-84cc20ca928a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9280a1b9-df1d-4f74-bf0f-66d62cfae955"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""98874a0b-0111-45a9-bb0d-4b7c713ba5d7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1b7c92f7-9fdd-473e-91f4-dab758eb66d8"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3f44796e-ba33-4ee5-81e8-f858cb7a965d"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""QE"",
                    ""id"": ""8c432c3c-ad36-4ad6-83f1-2ec9fe368b8a"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""498f58cb-f9e3-4d8d-8b94-f8d5d4a6e390"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""8aca1c03-b8d2-4d0b-b759-5fec05d122b5"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""63ea9ada-8198-4ee2-a0b8-847d1a3fc5f3"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""SetFocus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b51e9ced-3e39-4db2-ba56-23b7b55bd682"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""ResetCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8a40e46-3976-40a0-a462-aef4557b9abd"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""ConfirmCurrentAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a003feb-beee-4510-aac7-103eb00f4ad9"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""CancelCurrentAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5710eb91-b2d4-423b-ab7a-75a3c88c41cf"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""InvertAxes"",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""MouseMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""782acc04-dd59-4b35-a244-aa3667a2b082"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""MiddleMouseButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Game"",
            ""id"": ""be1dc7c7-d5d1-4df9-bfe7-c29a0c9d641f"",
            ""actions"": [
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""d31902fc-bd26-45ee-87e7-fc41caa09855"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectHeld"",
                    ""type"": ""Button"",
                    ""id"": ""ce18616f-ea31-4a2f-999f-b9a53535d00b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""04873d3b-99bc-434b-9ef3-ec3b40ee0d8a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateForward"",
                    ""type"": ""Button"",
                    ""id"": ""b47f7674-cea9-485b-9b45-04ac56689a09"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateVertical"",
                    ""type"": ""Button"",
                    ""id"": ""8102511e-14c6-4126-8344-babb4bbcd5f3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateHorizontal"",
                    ""type"": ""Button"",
                    ""id"": ""c8f95c94-9248-4455-ad61-b5c5818b5a4e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleContinuous"",
                    ""type"": ""Button"",
                    ""id"": ""041181cf-26cc-4d2c-ab40-9e8f366c2045"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleGridView"",
                    ""type"": ""Button"",
                    ""id"": ""593a05f9-6048-44ce-8f85-2d91d703d37a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CursorPosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""084e8443-1c98-49c4-aebd-70f3c5b05233"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotatePlaneForward"",
                    ""type"": ""Button"",
                    ""id"": ""5c98312a-8593-48c1-aae8-6a3e1253b7d9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotatePlaneVertical"",
                    ""type"": ""Button"",
                    ""id"": ""a9667c6b-2b89-4d2e-8a07-0faa23d0e7d4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotatePlaneHorizontal"",
                    ""type"": ""Button"",
                    ""id"": ""9ff78c20-3db4-463c-822a-c1cb8d03d44f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MovePlaneUp"",
                    ""type"": ""Button"",
                    ""id"": ""2e4e7002-cf03-404c-a07e-c1ff4e0c59b9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MovePlaneDown"",
                    ""type"": ""Button"",
                    ""id"": ""8dd7499b-ec15-4885-ba5b-5397bfa4e33d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleGizmos"",
                    ""type"": ""Button"",
                    ""id"": ""0f064371-6f2f-4937-a2df-19d1dc14dd92"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""395782a6-dd90-473b-8da5-a425b772f3b9"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e63c25ac-3d8a-4580-8e7a-900574bad845"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eda73de4-5ddf-4325-8766-cb776d8db7f6"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""RotateVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55314f00-1b77-46eb-af77-974d99590d9a"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""RotateHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""ShiftClick"",
                    ""id"": ""b7f77a57-9755-4049-a14a-7028ef4b475b"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleContinuous"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""34e66d7b-1aa4-483e-8a6d-ededf6e72db5"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""ToggleContinuous"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""653fd022-fef8-41a1-9bab-2eaf3f6f6855"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""ToggleContinuous"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8f801f49-ba34-44af-95d9-5474b70be4de"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""SelectHeld"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5799cc86-df11-45f7-9b2e-39b4a3fe805d"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""ToggleGridView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55aada06-9027-4ad8-b4ea-513ffbda8fd0"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""CursorPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bacec0d3-c58f-48d2-9970-78a9690e9b9c"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""RotateForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""86e00d24-2e43-4f2a-8b56-2c176fffa38c"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotatePlaneForward"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""31ac5723-d90d-4d59-a946-1803ee709f24"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotatePlaneForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""0d399eba-1946-49df-be0a-1133443c2581"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotatePlaneForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""8bac2208-b0fa-419c-a869-90a169968fd2"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotatePlaneVertical"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""627d3719-886e-4915-bafb-357882c80018"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""RotatePlaneVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""62716531-29ab-4111-b26a-469259d44e2f"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""RotatePlaneVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""52f807ef-1862-4b55-b91d-f219e5f942f6"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotatePlaneHorizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""9250d166-dba8-4f18-aba7-8067fec78366"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotatePlaneHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""c8372609-bebf-45e4-bd21-14c2b77421a3"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotatePlaneHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""2cffce87-b3bc-4a96-b53f-9cd5e63d6b30"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePlaneUp"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""ccc6b8e8-19d8-4332-9ac4-b3991e9f1255"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePlaneUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""7d8978e8-021d-40bd-90d7-2877ea89a10b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePlaneUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""3c1ec190-6c52-4ed5-8321-fdf1b1107ab8"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePlaneDown"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""5fd25de8-d0eb-45f1-aa61-e0ee52b18512"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePlaneDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""43a4c689-b30d-47f4-a091-33a85437f008"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePlaneDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d7504564-17ca-4334-92fb-03b3e3d1758d"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""ToggleGizmos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""12510375-e3c3-4f87-abee-b4e2faa7c90e"",
            ""actions"": [
                {
                    ""name"": ""TogglePause"",
                    ""type"": ""Button"",
                    ""id"": ""f5b618c1-7f67-4bb4-9737-4843e4bc1cca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseLeft"",
                    ""type"": ""Button"",
                    ""id"": ""2e5f3d23-36c8-464e-bf34-61fffbb7b7e8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""38f79bcc-738e-4520-b909-35c13ddaa56a"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""TogglePause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2838225f-e9bb-45fa-956a-614819e42723"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""MouseLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CheatActions"",
            ""id"": ""30ba62fd-6fdf-48b3-90c2-4a97485dc89c"",
            ""actions"": [
                {
                    ""name"": ""AddMoney"",
                    ""type"": ""Button"",
                    ""id"": ""f9ca477d-8844-4877-8322-da91462fd99c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AddAluminium"",
                    ""type"": ""Button"",
                    ""id"": ""4e3e5e27-e4b9-4e74-ac5b-2d32e41b670a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AddWater"",
                    ""type"": ""Button"",
                    ""id"": ""e3f4c9b4-5f36-41e8-b330-17edaa784ece"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AddOxygen"",
                    ""type"": ""Button"",
                    ""id"": ""1ebf1b89-e4df-4a08-ab17-e1565ead18a7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AddEnergy"",
                    ""type"": ""Button"",
                    ""id"": ""cd77791f-4a1e-4d3e-8420-e00a3b5c476e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AddPolymer"",
                    ""type"": ""Button"",
                    ""id"": ""a395ec35-7296-4481-8d21-4fbfcd5c560d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AddOil"",
                    ""type"": ""Button"",
                    ""id"": ""775a74e5-093f-4eaa-9cd1-70d42fab0eaa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AddVegtables"",
                    ""type"": ""Button"",
                    ""id"": ""ff2ced6a-fa99-4c98-ada1-856a9f3c6197"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AddWorkforce"",
                    ""type"": ""Button"",
                    ""id"": ""45bd4553-a17d-4afe-86ad-2a12367ed24c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7dc8aba4-dec0-445a-ac95-1abaa17bfed9"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""AddMoney"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""183d76b3-7f06-45bb-8d3f-5786ebb3c70d"",
                    ""path"": ""<Keyboard>/f2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""AddAluminium"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37b5ae3f-a569-4071-95e8-0cf220d78663"",
                    ""path"": ""<Keyboard>/f3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""AddWater"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ba73ec9-1338-4027-8dc9-383c833606e9"",
                    ""path"": ""<Keyboard>/f4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""AddOxygen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3549c966-85eb-4703-8446-4888dbc1f80b"",
                    ""path"": ""<Keyboard>/f5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""AddEnergy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c13a773f-e2b5-4b52-9f09-0a10d02e1c4c"",
                    ""path"": ""<Keyboard>/f6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AddPolymer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""097b13b5-3a2d-433b-b293-076cb91641e5"",
                    ""path"": ""<Keyboard>/f7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AddOil"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80f53698-0422-4c47-9dcb-b6e92aac78e5"",
                    ""path"": ""<Keyboard>/f8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AddVegtables"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""161f3aec-7903-464c-a7fb-4146d701e104"",
                    ""path"": ""<Keyboard>/f9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AddWorkforce"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Mouse and Keyboard"",
            ""bindingGroup"": ""Mouse and Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // Camera
            m_Camera = asset.FindActionMap("Camera", throwIfNotFound: true);
            m_Camera_Move = m_Camera.FindAction("Move", throwIfNotFound: true);
            m_Camera_Zoom = m_Camera.FindAction("Zoom", throwIfNotFound: true);
            m_Camera_Rotate = m_Camera.FindAction("Rotate", throwIfNotFound: true);
            m_Camera_SetFocus = m_Camera.FindAction("SetFocus", throwIfNotFound: true);
            m_Camera_ResetCamera = m_Camera.FindAction("ResetCamera", throwIfNotFound: true);
            m_Camera_ConfirmCurrentAction = m_Camera.FindAction("ConfirmCurrentAction", throwIfNotFound: true);
            m_Camera_CancelCurrentAction = m_Camera.FindAction("CancelCurrentAction", throwIfNotFound: true);
            m_Camera_MouseMove = m_Camera.FindAction("MouseMove", throwIfNotFound: true);
            m_Camera_MiddleMouseButton = m_Camera.FindAction("MiddleMouseButton", throwIfNotFound: true);
            // Game
            m_Game = asset.FindActionMap("Game", throwIfNotFound: true);
            m_Game_Select = m_Game.FindAction("Select", throwIfNotFound: true);
            m_Game_SelectHeld = m_Game.FindAction("SelectHeld", throwIfNotFound: true);
            m_Game_Cancel = m_Game.FindAction("Cancel", throwIfNotFound: true);
            m_Game_RotateForward = m_Game.FindAction("RotateForward", throwIfNotFound: true);
            m_Game_RotateVertical = m_Game.FindAction("RotateVertical", throwIfNotFound: true);
            m_Game_RotateHorizontal = m_Game.FindAction("RotateHorizontal", throwIfNotFound: true);
            m_Game_ToggleContinuous = m_Game.FindAction("ToggleContinuous", throwIfNotFound: true);
            m_Game_ToggleGridView = m_Game.FindAction("ToggleGridView", throwIfNotFound: true);
            m_Game_CursorPosition = m_Game.FindAction("CursorPosition", throwIfNotFound: true);
            m_Game_RotatePlaneForward = m_Game.FindAction("RotatePlaneForward", throwIfNotFound: true);
            m_Game_RotatePlaneVertical = m_Game.FindAction("RotatePlaneVertical", throwIfNotFound: true);
            m_Game_RotatePlaneHorizontal = m_Game.FindAction("RotatePlaneHorizontal", throwIfNotFound: true);
            m_Game_MovePlaneUp = m_Game.FindAction("MovePlaneUp", throwIfNotFound: true);
            m_Game_MovePlaneDown = m_Game.FindAction("MovePlaneDown", throwIfNotFound: true);
            m_Game_ToggleGizmos = m_Game.FindAction("ToggleGizmos", throwIfNotFound: true);
            // UI
            m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
            m_UI_TogglePause = m_UI.FindAction("TogglePause", throwIfNotFound: true);
            m_UI_MouseLeft = m_UI.FindAction("MouseLeft", throwIfNotFound: true);
            // CheatActions
            m_CheatActions = asset.FindActionMap("CheatActions", throwIfNotFound: true);
            m_CheatActions_AddMoney = m_CheatActions.FindAction("AddMoney", throwIfNotFound: true);
            m_CheatActions_AddAluminium = m_CheatActions.FindAction("AddAluminium", throwIfNotFound: true);
            m_CheatActions_AddWater = m_CheatActions.FindAction("AddWater", throwIfNotFound: true);
            m_CheatActions_AddOxygen = m_CheatActions.FindAction("AddOxygen", throwIfNotFound: true);
            m_CheatActions_AddEnergy = m_CheatActions.FindAction("AddEnergy", throwIfNotFound: true);
            m_CheatActions_AddPolymer = m_CheatActions.FindAction("AddPolymer", throwIfNotFound: true);
            m_CheatActions_AddOil = m_CheatActions.FindAction("AddOil", throwIfNotFound: true);
            m_CheatActions_AddVegtables = m_CheatActions.FindAction("AddVegtables", throwIfNotFound: true);
            m_CheatActions_AddWorkforce = m_CheatActions.FindAction("AddWorkforce", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Camera
        private readonly InputActionMap m_Camera;
        private ICameraActions m_CameraActionsCallbackInterface;
        private readonly InputAction m_Camera_Move;
        private readonly InputAction m_Camera_Zoom;
        private readonly InputAction m_Camera_Rotate;
        private readonly InputAction m_Camera_SetFocus;
        private readonly InputAction m_Camera_ResetCamera;
        private readonly InputAction m_Camera_ConfirmCurrentAction;
        private readonly InputAction m_Camera_CancelCurrentAction;
        private readonly InputAction m_Camera_MouseMove;
        private readonly InputAction m_Camera_MiddleMouseButton;
        public struct CameraActions
        {
            private @Input m_Wrapper;
            public CameraActions(@Input wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Camera_Move;
            public InputAction @Zoom => m_Wrapper.m_Camera_Zoom;
            public InputAction @Rotate => m_Wrapper.m_Camera_Rotate;
            public InputAction @SetFocus => m_Wrapper.m_Camera_SetFocus;
            public InputAction @ResetCamera => m_Wrapper.m_Camera_ResetCamera;
            public InputAction @ConfirmCurrentAction => m_Wrapper.m_Camera_ConfirmCurrentAction;
            public InputAction @CancelCurrentAction => m_Wrapper.m_Camera_CancelCurrentAction;
            public InputAction @MouseMove => m_Wrapper.m_Camera_MouseMove;
            public InputAction @MiddleMouseButton => m_Wrapper.m_Camera_MiddleMouseButton;
            public InputActionMap Get() { return m_Wrapper.m_Camera; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(CameraActions set) { return set.Get(); }
            public void SetCallbacks(ICameraActions instance)
            {
                if (m_Wrapper.m_CameraActionsCallbackInterface != null)
                {
                    @Move.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnMove;
                    @Zoom.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnZoom;
                    @Zoom.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnZoom;
                    @Zoom.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnZoom;
                    @Rotate.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnRotate;
                    @Rotate.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnRotate;
                    @Rotate.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnRotate;
                    @SetFocus.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnSetFocus;
                    @SetFocus.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnSetFocus;
                    @SetFocus.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnSetFocus;
                    @ResetCamera.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnResetCamera;
                    @ResetCamera.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnResetCamera;
                    @ResetCamera.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnResetCamera;
                    @ConfirmCurrentAction.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnConfirmCurrentAction;
                    @ConfirmCurrentAction.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnConfirmCurrentAction;
                    @ConfirmCurrentAction.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnConfirmCurrentAction;
                    @CancelCurrentAction.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnCancelCurrentAction;
                    @CancelCurrentAction.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnCancelCurrentAction;
                    @CancelCurrentAction.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnCancelCurrentAction;
                    @MouseMove.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnMouseMove;
                    @MouseMove.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnMouseMove;
                    @MouseMove.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnMouseMove;
                    @MiddleMouseButton.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnMiddleMouseButton;
                    @MiddleMouseButton.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnMiddleMouseButton;
                    @MiddleMouseButton.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnMiddleMouseButton;
                }
                m_Wrapper.m_CameraActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @Zoom.started += instance.OnZoom;
                    @Zoom.performed += instance.OnZoom;
                    @Zoom.canceled += instance.OnZoom;
                    @Rotate.started += instance.OnRotate;
                    @Rotate.performed += instance.OnRotate;
                    @Rotate.canceled += instance.OnRotate;
                    @SetFocus.started += instance.OnSetFocus;
                    @SetFocus.performed += instance.OnSetFocus;
                    @SetFocus.canceled += instance.OnSetFocus;
                    @ResetCamera.started += instance.OnResetCamera;
                    @ResetCamera.performed += instance.OnResetCamera;
                    @ResetCamera.canceled += instance.OnResetCamera;
                    @ConfirmCurrentAction.started += instance.OnConfirmCurrentAction;
                    @ConfirmCurrentAction.performed += instance.OnConfirmCurrentAction;
                    @ConfirmCurrentAction.canceled += instance.OnConfirmCurrentAction;
                    @CancelCurrentAction.started += instance.OnCancelCurrentAction;
                    @CancelCurrentAction.performed += instance.OnCancelCurrentAction;
                    @CancelCurrentAction.canceled += instance.OnCancelCurrentAction;
                    @MouseMove.started += instance.OnMouseMove;
                    @MouseMove.performed += instance.OnMouseMove;
                    @MouseMove.canceled += instance.OnMouseMove;
                    @MiddleMouseButton.started += instance.OnMiddleMouseButton;
                    @MiddleMouseButton.performed += instance.OnMiddleMouseButton;
                    @MiddleMouseButton.canceled += instance.OnMiddleMouseButton;
                }
            }
        }
        public CameraActions @Camera => new CameraActions(this);

        // Game
        private readonly InputActionMap m_Game;
        private IGameActions m_GameActionsCallbackInterface;
        private readonly InputAction m_Game_Select;
        private readonly InputAction m_Game_SelectHeld;
        private readonly InputAction m_Game_Cancel;
        private readonly InputAction m_Game_RotateForward;
        private readonly InputAction m_Game_RotateVertical;
        private readonly InputAction m_Game_RotateHorizontal;
        private readonly InputAction m_Game_ToggleContinuous;
        private readonly InputAction m_Game_ToggleGridView;
        private readonly InputAction m_Game_CursorPosition;
        private readonly InputAction m_Game_RotatePlaneForward;
        private readonly InputAction m_Game_RotatePlaneVertical;
        private readonly InputAction m_Game_RotatePlaneHorizontal;
        private readonly InputAction m_Game_MovePlaneUp;
        private readonly InputAction m_Game_MovePlaneDown;
        private readonly InputAction m_Game_ToggleGizmos;
        public struct GameActions
        {
            private @Input m_Wrapper;
            public GameActions(@Input wrapper) { m_Wrapper = wrapper; }
            public InputAction @Select => m_Wrapper.m_Game_Select;
            public InputAction @SelectHeld => m_Wrapper.m_Game_SelectHeld;
            public InputAction @Cancel => m_Wrapper.m_Game_Cancel;
            public InputAction @RotateForward => m_Wrapper.m_Game_RotateForward;
            public InputAction @RotateVertical => m_Wrapper.m_Game_RotateVertical;
            public InputAction @RotateHorizontal => m_Wrapper.m_Game_RotateHorizontal;
            public InputAction @ToggleContinuous => m_Wrapper.m_Game_ToggleContinuous;
            public InputAction @ToggleGridView => m_Wrapper.m_Game_ToggleGridView;
            public InputAction @CursorPosition => m_Wrapper.m_Game_CursorPosition;
            public InputAction @RotatePlaneForward => m_Wrapper.m_Game_RotatePlaneForward;
            public InputAction @RotatePlaneVertical => m_Wrapper.m_Game_RotatePlaneVertical;
            public InputAction @RotatePlaneHorizontal => m_Wrapper.m_Game_RotatePlaneHorizontal;
            public InputAction @MovePlaneUp => m_Wrapper.m_Game_MovePlaneUp;
            public InputAction @MovePlaneDown => m_Wrapper.m_Game_MovePlaneDown;
            public InputAction @ToggleGizmos => m_Wrapper.m_Game_ToggleGizmos;
            public InputActionMap Get() { return m_Wrapper.m_Game; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(GameActions set) { return set.Get(); }
            public void SetCallbacks(IGameActions instance)
            {
                if (m_Wrapper.m_GameActionsCallbackInterface != null)
                {
                    @Select.started -= m_Wrapper.m_GameActionsCallbackInterface.OnSelect;
                    @Select.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnSelect;
                    @Select.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnSelect;
                    @SelectHeld.started -= m_Wrapper.m_GameActionsCallbackInterface.OnSelectHeld;
                    @SelectHeld.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnSelectHeld;
                    @SelectHeld.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnSelectHeld;
                    @Cancel.started -= m_Wrapper.m_GameActionsCallbackInterface.OnCancel;
                    @Cancel.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnCancel;
                    @Cancel.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnCancel;
                    @RotateForward.started -= m_Wrapper.m_GameActionsCallbackInterface.OnRotateForward;
                    @RotateForward.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnRotateForward;
                    @RotateForward.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnRotateForward;
                    @RotateVertical.started -= m_Wrapper.m_GameActionsCallbackInterface.OnRotateVertical;
                    @RotateVertical.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnRotateVertical;
                    @RotateVertical.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnRotateVertical;
                    @RotateHorizontal.started -= m_Wrapper.m_GameActionsCallbackInterface.OnRotateHorizontal;
                    @RotateHorizontal.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnRotateHorizontal;
                    @RotateHorizontal.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnRotateHorizontal;
                    @ToggleContinuous.started -= m_Wrapper.m_GameActionsCallbackInterface.OnToggleContinuous;
                    @ToggleContinuous.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnToggleContinuous;
                    @ToggleContinuous.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnToggleContinuous;
                    @ToggleGridView.started -= m_Wrapper.m_GameActionsCallbackInterface.OnToggleGridView;
                    @ToggleGridView.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnToggleGridView;
                    @ToggleGridView.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnToggleGridView;
                    @CursorPosition.started -= m_Wrapper.m_GameActionsCallbackInterface.OnCursorPosition;
                    @CursorPosition.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnCursorPosition;
                    @CursorPosition.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnCursorPosition;
                    @RotatePlaneForward.started -= m_Wrapper.m_GameActionsCallbackInterface.OnRotatePlaneForward;
                    @RotatePlaneForward.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnRotatePlaneForward;
                    @RotatePlaneForward.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnRotatePlaneForward;
                    @RotatePlaneVertical.started -= m_Wrapper.m_GameActionsCallbackInterface.OnRotatePlaneVertical;
                    @RotatePlaneVertical.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnRotatePlaneVertical;
                    @RotatePlaneVertical.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnRotatePlaneVertical;
                    @RotatePlaneHorizontal.started -= m_Wrapper.m_GameActionsCallbackInterface.OnRotatePlaneHorizontal;
                    @RotatePlaneHorizontal.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnRotatePlaneHorizontal;
                    @RotatePlaneHorizontal.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnRotatePlaneHorizontal;
                    @MovePlaneUp.started -= m_Wrapper.m_GameActionsCallbackInterface.OnMovePlaneUp;
                    @MovePlaneUp.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnMovePlaneUp;
                    @MovePlaneUp.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnMovePlaneUp;
                    @MovePlaneDown.started -= m_Wrapper.m_GameActionsCallbackInterface.OnMovePlaneDown;
                    @MovePlaneDown.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnMovePlaneDown;
                    @MovePlaneDown.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnMovePlaneDown;
                    @ToggleGizmos.started -= m_Wrapper.m_GameActionsCallbackInterface.OnToggleGizmos;
                    @ToggleGizmos.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnToggleGizmos;
                    @ToggleGizmos.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnToggleGizmos;
                }
                m_Wrapper.m_GameActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Select.started += instance.OnSelect;
                    @Select.performed += instance.OnSelect;
                    @Select.canceled += instance.OnSelect;
                    @SelectHeld.started += instance.OnSelectHeld;
                    @SelectHeld.performed += instance.OnSelectHeld;
                    @SelectHeld.canceled += instance.OnSelectHeld;
                    @Cancel.started += instance.OnCancel;
                    @Cancel.performed += instance.OnCancel;
                    @Cancel.canceled += instance.OnCancel;
                    @RotateForward.started += instance.OnRotateForward;
                    @RotateForward.performed += instance.OnRotateForward;
                    @RotateForward.canceled += instance.OnRotateForward;
                    @RotateVertical.started += instance.OnRotateVertical;
                    @RotateVertical.performed += instance.OnRotateVertical;
                    @RotateVertical.canceled += instance.OnRotateVertical;
                    @RotateHorizontal.started += instance.OnRotateHorizontal;
                    @RotateHorizontal.performed += instance.OnRotateHorizontal;
                    @RotateHorizontal.canceled += instance.OnRotateHorizontal;
                    @ToggleContinuous.started += instance.OnToggleContinuous;
                    @ToggleContinuous.performed += instance.OnToggleContinuous;
                    @ToggleContinuous.canceled += instance.OnToggleContinuous;
                    @ToggleGridView.started += instance.OnToggleGridView;
                    @ToggleGridView.performed += instance.OnToggleGridView;
                    @ToggleGridView.canceled += instance.OnToggleGridView;
                    @CursorPosition.started += instance.OnCursorPosition;
                    @CursorPosition.performed += instance.OnCursorPosition;
                    @CursorPosition.canceled += instance.OnCursorPosition;
                    @RotatePlaneForward.started += instance.OnRotatePlaneForward;
                    @RotatePlaneForward.performed += instance.OnRotatePlaneForward;
                    @RotatePlaneForward.canceled += instance.OnRotatePlaneForward;
                    @RotatePlaneVertical.started += instance.OnRotatePlaneVertical;
                    @RotatePlaneVertical.performed += instance.OnRotatePlaneVertical;
                    @RotatePlaneVertical.canceled += instance.OnRotatePlaneVertical;
                    @RotatePlaneHorizontal.started += instance.OnRotatePlaneHorizontal;
                    @RotatePlaneHorizontal.performed += instance.OnRotatePlaneHorizontal;
                    @RotatePlaneHorizontal.canceled += instance.OnRotatePlaneHorizontal;
                    @MovePlaneUp.started += instance.OnMovePlaneUp;
                    @MovePlaneUp.performed += instance.OnMovePlaneUp;
                    @MovePlaneUp.canceled += instance.OnMovePlaneUp;
                    @MovePlaneDown.started += instance.OnMovePlaneDown;
                    @MovePlaneDown.performed += instance.OnMovePlaneDown;
                    @MovePlaneDown.canceled += instance.OnMovePlaneDown;
                    @ToggleGizmos.started += instance.OnToggleGizmos;
                    @ToggleGizmos.performed += instance.OnToggleGizmos;
                    @ToggleGizmos.canceled += instance.OnToggleGizmos;
                }
            }
        }
        public GameActions @Game => new GameActions(this);

        // UI
        private readonly InputActionMap m_UI;
        private IUIActions m_UIActionsCallbackInterface;
        private readonly InputAction m_UI_TogglePause;
        private readonly InputAction m_UI_MouseLeft;
        public struct UIActions
        {
            private @Input m_Wrapper;
            public UIActions(@Input wrapper) { m_Wrapper = wrapper; }
            public InputAction @TogglePause => m_Wrapper.m_UI_TogglePause;
            public InputAction @MouseLeft => m_Wrapper.m_UI_MouseLeft;
            public InputActionMap Get() { return m_Wrapper.m_UI; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
            public void SetCallbacks(IUIActions instance)
            {
                if (m_Wrapper.m_UIActionsCallbackInterface != null)
                {
                    @TogglePause.started -= m_Wrapper.m_UIActionsCallbackInterface.OnTogglePause;
                    @TogglePause.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnTogglePause;
                    @TogglePause.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnTogglePause;
                    @MouseLeft.started -= m_Wrapper.m_UIActionsCallbackInterface.OnMouseLeft;
                    @MouseLeft.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnMouseLeft;
                    @MouseLeft.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnMouseLeft;
                }
                m_Wrapper.m_UIActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @TogglePause.started += instance.OnTogglePause;
                    @TogglePause.performed += instance.OnTogglePause;
                    @TogglePause.canceled += instance.OnTogglePause;
                    @MouseLeft.started += instance.OnMouseLeft;
                    @MouseLeft.performed += instance.OnMouseLeft;
                    @MouseLeft.canceled += instance.OnMouseLeft;
                }
            }
        }
        public UIActions @UI => new UIActions(this);

        // CheatActions
        private readonly InputActionMap m_CheatActions;
        private ICheatActionsActions m_CheatActionsActionsCallbackInterface;
        private readonly InputAction m_CheatActions_AddMoney;
        private readonly InputAction m_CheatActions_AddAluminium;
        private readonly InputAction m_CheatActions_AddWater;
        private readonly InputAction m_CheatActions_AddOxygen;
        private readonly InputAction m_CheatActions_AddEnergy;
        private readonly InputAction m_CheatActions_AddPolymer;
        private readonly InputAction m_CheatActions_AddOil;
        private readonly InputAction m_CheatActions_AddVegtables;
        private readonly InputAction m_CheatActions_AddWorkforce;
        public struct CheatActionsActions
        {
            private @Input m_Wrapper;
            public CheatActionsActions(@Input wrapper) { m_Wrapper = wrapper; }
            public InputAction @AddMoney => m_Wrapper.m_CheatActions_AddMoney;
            public InputAction @AddAluminium => m_Wrapper.m_CheatActions_AddAluminium;
            public InputAction @AddWater => m_Wrapper.m_CheatActions_AddWater;
            public InputAction @AddOxygen => m_Wrapper.m_CheatActions_AddOxygen;
            public InputAction @AddEnergy => m_Wrapper.m_CheatActions_AddEnergy;
            public InputAction @AddPolymer => m_Wrapper.m_CheatActions_AddPolymer;
            public InputAction @AddOil => m_Wrapper.m_CheatActions_AddOil;
            public InputAction @AddVegtables => m_Wrapper.m_CheatActions_AddVegtables;
            public InputAction @AddWorkforce => m_Wrapper.m_CheatActions_AddWorkforce;
            public InputActionMap Get() { return m_Wrapper.m_CheatActions; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(CheatActionsActions set) { return set.Get(); }
            public void SetCallbacks(ICheatActionsActions instance)
            {
                if (m_Wrapper.m_CheatActionsActionsCallbackInterface != null)
                {
                    @AddMoney.started -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddMoney;
                    @AddMoney.performed -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddMoney;
                    @AddMoney.canceled -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddMoney;
                    @AddAluminium.started -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddAluminium;
                    @AddAluminium.performed -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddAluminium;
                    @AddAluminium.canceled -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddAluminium;
                    @AddWater.started -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddWater;
                    @AddWater.performed -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddWater;
                    @AddWater.canceled -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddWater;
                    @AddOxygen.started -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddOxygen;
                    @AddOxygen.performed -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddOxygen;
                    @AddOxygen.canceled -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddOxygen;
                    @AddEnergy.started -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddEnergy;
                    @AddEnergy.performed -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddEnergy;
                    @AddEnergy.canceled -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddEnergy;
                    @AddPolymer.started -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddPolymer;
                    @AddPolymer.performed -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddPolymer;
                    @AddPolymer.canceled -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddPolymer;
                    @AddOil.started -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddOil;
                    @AddOil.performed -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddOil;
                    @AddOil.canceled -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddOil;
                    @AddVegtables.started -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddVegtables;
                    @AddVegtables.performed -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddVegtables;
                    @AddVegtables.canceled -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddVegtables;
                    @AddWorkforce.started -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddWorkforce;
                    @AddWorkforce.performed -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddWorkforce;
                    @AddWorkforce.canceled -= m_Wrapper.m_CheatActionsActionsCallbackInterface.OnAddWorkforce;
                }
                m_Wrapper.m_CheatActionsActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @AddMoney.started += instance.OnAddMoney;
                    @AddMoney.performed += instance.OnAddMoney;
                    @AddMoney.canceled += instance.OnAddMoney;
                    @AddAluminium.started += instance.OnAddAluminium;
                    @AddAluminium.performed += instance.OnAddAluminium;
                    @AddAluminium.canceled += instance.OnAddAluminium;
                    @AddWater.started += instance.OnAddWater;
                    @AddWater.performed += instance.OnAddWater;
                    @AddWater.canceled += instance.OnAddWater;
                    @AddOxygen.started += instance.OnAddOxygen;
                    @AddOxygen.performed += instance.OnAddOxygen;
                    @AddOxygen.canceled += instance.OnAddOxygen;
                    @AddEnergy.started += instance.OnAddEnergy;
                    @AddEnergy.performed += instance.OnAddEnergy;
                    @AddEnergy.canceled += instance.OnAddEnergy;
                    @AddPolymer.started += instance.OnAddPolymer;
                    @AddPolymer.performed += instance.OnAddPolymer;
                    @AddPolymer.canceled += instance.OnAddPolymer;
                    @AddOil.started += instance.OnAddOil;
                    @AddOil.performed += instance.OnAddOil;
                    @AddOil.canceled += instance.OnAddOil;
                    @AddVegtables.started += instance.OnAddVegtables;
                    @AddVegtables.performed += instance.OnAddVegtables;
                    @AddVegtables.canceled += instance.OnAddVegtables;
                    @AddWorkforce.started += instance.OnAddWorkforce;
                    @AddWorkforce.performed += instance.OnAddWorkforce;
                    @AddWorkforce.canceled += instance.OnAddWorkforce;
                }
            }
        }
        public CheatActionsActions @CheatActions => new CheatActionsActions(this);
        private int m_MouseandKeyboardSchemeIndex = -1;
        public InputControlScheme MouseandKeyboardScheme
        {
            get
            {
                if (m_MouseandKeyboardSchemeIndex == -1) m_MouseandKeyboardSchemeIndex = asset.FindControlSchemeIndex("Mouse and Keyboard");
                return asset.controlSchemes[m_MouseandKeyboardSchemeIndex];
            }
        }
        public interface ICameraActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnZoom(InputAction.CallbackContext context);
            void OnRotate(InputAction.CallbackContext context);
            void OnSetFocus(InputAction.CallbackContext context);
            void OnResetCamera(InputAction.CallbackContext context);
            void OnConfirmCurrentAction(InputAction.CallbackContext context);
            void OnCancelCurrentAction(InputAction.CallbackContext context);
            void OnMouseMove(InputAction.CallbackContext context);
            void OnMiddleMouseButton(InputAction.CallbackContext context);
        }
        public interface IGameActions
        {
            void OnSelect(InputAction.CallbackContext context);
            void OnSelectHeld(InputAction.CallbackContext context);
            void OnCancel(InputAction.CallbackContext context);
            void OnRotateForward(InputAction.CallbackContext context);
            void OnRotateVertical(InputAction.CallbackContext context);
            void OnRotateHorizontal(InputAction.CallbackContext context);
            void OnToggleContinuous(InputAction.CallbackContext context);
            void OnToggleGridView(InputAction.CallbackContext context);
            void OnCursorPosition(InputAction.CallbackContext context);
            void OnRotatePlaneForward(InputAction.CallbackContext context);
            void OnRotatePlaneVertical(InputAction.CallbackContext context);
            void OnRotatePlaneHorizontal(InputAction.CallbackContext context);
            void OnMovePlaneUp(InputAction.CallbackContext context);
            void OnMovePlaneDown(InputAction.CallbackContext context);
            void OnToggleGizmos(InputAction.CallbackContext context);
        }
        public interface IUIActions
        {
            void OnTogglePause(InputAction.CallbackContext context);
            void OnMouseLeft(InputAction.CallbackContext context);
        }
        public interface ICheatActionsActions
        {
            void OnAddMoney(InputAction.CallbackContext context);
            void OnAddAluminium(InputAction.CallbackContext context);
            void OnAddWater(InputAction.CallbackContext context);
            void OnAddOxygen(InputAction.CallbackContext context);
            void OnAddEnergy(InputAction.CallbackContext context);
            void OnAddPolymer(InputAction.CallbackContext context);
            void OnAddOil(InputAction.CallbackContext context);
            void OnAddVegtables(InputAction.CallbackContext context);
            void OnAddWorkforce(InputAction.CallbackContext context);
        }
    }
}
