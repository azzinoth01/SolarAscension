//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Articy.Sola;
using Articy.Unity;
using Articy.Unity.Interfaces;
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;


namespace Articy.Sola.Features
{
    
    
    [Serializable()]
    public class DefaultBasicCharacterTemplateFeature : IArticyBaseObject, IPropertyProvider
    {
        
        [SerializeField()]
        private Single mAge;
        
        [SerializeField()]
        private String mLocaKey_Nationality;
        
        [SerializeField()]
        private String mOverwritten_Nationality = "";
        
        [SerializeField()]
        private Accent mAccent = new Accent();
        
        [SerializeField()]
        private String mLocaKey_Faction;
        
        [SerializeField()]
        private String mOverwritten_Faction = "";
        
        [SerializeField()]
        private String mLocaKey_VoiceActor;
        
        [SerializeField()]
        private String mOverwritten_VoiceActor = "";
        
        [SerializeField()]
        private String mLocaKey_Personality;
        
        [SerializeField()]
        private String mOverwritten_Personality = "";
        
        [SerializeField()]
        private String mLocaKey_ShortInfo;
        
        [SerializeField()]
        private String mOverwritten_ShortInfo = "";
        
        [SerializeField()]
        private UInt64 mOwnerId;
        
        [SerializeField()]
        private UInt32 mOwnerInstanceId;
        
        public Single Age
        {
            get
            {
                return mAge;
            }
            set
            {
                var oldValue = mAge;
                mAge = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "DefaultBasicCharacterTemplate.Age", oldValue, mAge);
            }
        }
        
        public String LocaKey_Nationality
        {
            get
            {
                return mLocaKey_Nationality;
            }
        }
        
        public String Nationality
        {
            get
            {
                if ((mOverwritten_Nationality != ""))
                {
                    return mOverwritten_Nationality;
                }
                return Articy.Unity.ArticyDatabase.Localization.Localize(mLocaKey_Nationality);
            }
            set
            {
                var oldValue = Nationality;
                mOverwritten_Nationality = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "DefaultBasicCharacterTemplate.Nationality", oldValue, mOverwritten_Nationality);
            }
        }
        
        public Accent Accent
        {
            get
            {
                return mAccent;
            }
            set
            {
                var oldValue = mAccent;
                mAccent = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "DefaultBasicCharacterTemplate.Accent", oldValue, mAccent);
            }
        }
        
        public String LocaKey_Faction
        {
            get
            {
                return mLocaKey_Faction;
            }
        }
        
        public String Faction
        {
            get
            {
                if ((mOverwritten_Faction != ""))
                {
                    return mOverwritten_Faction;
                }
                return Articy.Unity.ArticyDatabase.Localization.Localize(mLocaKey_Faction);
            }
            set
            {
                var oldValue = Faction;
                mOverwritten_Faction = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "DefaultBasicCharacterTemplate.Faction", oldValue, mOverwritten_Faction);
            }
        }
        
        public String LocaKey_VoiceActor
        {
            get
            {
                return mLocaKey_VoiceActor;
            }
        }
        
        public String VoiceActor
        {
            get
            {
                if ((mOverwritten_VoiceActor != ""))
                {
                    return mOverwritten_VoiceActor;
                }
                return Articy.Unity.ArticyDatabase.Localization.Localize(mLocaKey_VoiceActor);
            }
            set
            {
                var oldValue = VoiceActor;
                mOverwritten_VoiceActor = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "DefaultBasicCharacterTemplate.VoiceActor", oldValue, mOverwritten_VoiceActor);
            }
        }
        
        public String LocaKey_Personality
        {
            get
            {
                return mLocaKey_Personality;
            }
        }
        
        public String Personality
        {
            get
            {
                if ((mOverwritten_Personality != ""))
                {
                    return mOverwritten_Personality;
                }
                return Articy.Unity.ArticyDatabase.Localization.Localize(mLocaKey_Personality);
            }
            set
            {
                var oldValue = Personality;
                mOverwritten_Personality = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "DefaultBasicCharacterTemplate.Personality", oldValue, mOverwritten_Personality);
            }
        }
        
        public String LocaKey_ShortInfo
        {
            get
            {
                return mLocaKey_ShortInfo;
            }
        }
        
        public String ShortInfo
        {
            get
            {
                if ((mOverwritten_ShortInfo != ""))
                {
                    return mOverwritten_ShortInfo;
                }
                return Articy.Unity.ArticyDatabase.Localization.Localize(mLocaKey_ShortInfo);
            }
            set
            {
                var oldValue = ShortInfo;
                mOverwritten_ShortInfo = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "DefaultBasicCharacterTemplate.ShortInfo", oldValue, mOverwritten_ShortInfo);
            }
        }
        
        public UInt64 OwnerId
        {
            get
            {
                return mOwnerId;
            }
            set
            {
                mOwnerId = value;
            }
        }
        
        public UInt32 OwnerInstanceId
        {
            get
            {
                return mOwnerInstanceId;
            }
            set
            {
                mOwnerInstanceId = value;
            }
        }
        
        private void CloneProperties(object aClone, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.Sola.Features.DefaultBasicCharacterTemplateFeature newClone = ((Articy.Sola.Features.DefaultBasicCharacterTemplateFeature)(aClone));
            newClone.Age = Age;
            newClone.mLocaKey_Nationality = mLocaKey_Nationality;
            newClone.mOverwritten_Nationality = mOverwritten_Nationality;
            newClone.Accent = Accent;
            newClone.mLocaKey_Faction = mLocaKey_Faction;
            newClone.mOverwritten_Faction = mOverwritten_Faction;
            newClone.mLocaKey_VoiceActor = mLocaKey_VoiceActor;
            newClone.mOverwritten_VoiceActor = mOverwritten_VoiceActor;
            newClone.mLocaKey_Personality = mLocaKey_Personality;
            newClone.mOverwritten_Personality = mOverwritten_Personality;
            newClone.mLocaKey_ShortInfo = mLocaKey_ShortInfo;
            newClone.mOverwritten_ShortInfo = mOverwritten_ShortInfo;
            newClone.OwnerId = OwnerId;
        }
        
        public object CloneObject(object aParent, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.Sola.Features.DefaultBasicCharacterTemplateFeature clone = new Articy.Sola.Features.DefaultBasicCharacterTemplateFeature();
            CloneProperties(clone, aFirstClassParent);
            return clone;
        }
        
        public virtual bool IsLocalizedPropertyOverwritten(string aProperty)
        {
            if ((mOverwritten_Nationality != ""))
            {
                return true;
            }
            if ((mOverwritten_Faction != ""))
            {
                return true;
            }
            if ((mOverwritten_VoiceActor != ""))
            {
                return true;
            }
            if ((mOverwritten_Personality != ""))
            {
                return true;
            }
            if ((mOverwritten_ShortInfo != ""))
            {
                return true;
            }
            return false;
        }
        
        #region property provider interface
        public void setProp(string aProperty, object aValue)
        {
            if ((aProperty == "Age"))
            {
                Age = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "Nationality"))
            {
                Nationality = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "Accent"))
            {
                Accent = ((Accent)(aValue));
                return;
            }
            if ((aProperty == "Faction"))
            {
                Faction = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "VoiceActor"))
            {
                VoiceActor = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "Personality"))
            {
                Personality = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "ShortInfo"))
            {
                ShortInfo = System.Convert.ToString(aValue);
                return;
            }
        }
        
        public Articy.Unity.Interfaces.ScriptDataProxy getProp(string aProperty)
        {
            if ((aProperty == "Age"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Age);
            }
            if ((aProperty == "Nationality"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Nationality);
            }
            if ((aProperty == "Accent"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Accent);
            }
            if ((aProperty == "Faction"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Faction);
            }
            if ((aProperty == "VoiceActor"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(VoiceActor);
            }
            if ((aProperty == "Personality"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Personality);
            }
            if ((aProperty == "ShortInfo"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(ShortInfo);
            }
            return null;
        }
        #endregion
    }
}
